// Выведи в консоль сообщение "Начало загрузки страницы видео".
// Создай Promise, который сразу же разрешается (resolve) и выводит в консоль "Основная информация о видео загружена". Используй .then() для обработки успешного разрешения.
// Используй setTimeout с нулевой задержкой (0 мс), чтобы вывести в консоль "Список рекомендаций загружен".
// Выведи в консоль сообщение "Конец скрипта".
// Проанализируй порядок вывода сообщений. Обрати внимание, что выполнится раньше: обработчик .then() у промиса или колбэк setTimeout, даже если у таймера нулевая задержка?
// Почему задача полезна?

const succesDownload = new Promise((resolve, reject) => {
  resolve("Основная информация о видео загружена");
});

console.log("Начало загрузки страницы видео...");

succesDownload
.then(() => console.log("Основная информация о видео загружена."));
.catch((error) => throw new Error(`Произошла ошибка: ${error}`));

setTimeout(() => {
  console.log("Список рекомендаций загружен.")
}, 0);

console.log("Конец скрипта");

// 1. Выведется синхронная часть кода (Первый и последний консоль.логи)
// 2. Промис, так как он является микротаской
// 3. Таймаут, так как является макротаской (не смотря на установленное время в 0 секунд)
