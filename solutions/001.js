const fetchFuncTwitter = () => {
    async function fetchUserInfo() {
        const Info = {
            name: '–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤',
            bio: '–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.'
        };
        return new Promise(resolve => setTimeout(() => resolve(Info), 1000));
    }

    async function fetchUserTweets() {
        const Tweets = ['–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?', '–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.'];
        return new Promise(resolve => setTimeout(() => resolve(Tweets), 1500));
    }

    async function fetchUserFollowers() {
        const Followers = 15000;
        return new Promise(resolve => setTimeout(() => resolve(Followers), 500));
    }

    return {fetchUserInfo, fetchUserTweets, fetchUserFollowers};
}

const loadUserProfile = () => {
    Promise.all([fetchFuncTwitter().fetchUserInfo(), fetchFuncTwitter().fetchUserTweets(), fetchFuncTwitter().fetchUserFollowers()]).then(values => {
        console.log(validationValuesWidget(values));
    });
}

const validationValuesWidget = (values) => {
    return`
        –ò–º—è: ${values[0].name}
        –ë–∏–æ: ${values[0].bio}
        –¢–≤–∏—Ç—ã: ${values[1]}
        –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${values[2]}    
    `
}

loadUserProfile();
// —è –±—ã –µ—â–µ –Ω–∞–ø–∏—Å–∞–ª –≤–µ–∑–¥–µ export —á—Ç–æ–± –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –Ω–æ —ç—Ç–æ –Ω—É–∂–Ω–æ package.json —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å —Ç–∏–ø–æ–º –º–æ–¥—É–ª—å —Ç–∞–∫ —á—Ç–æ –Ω–∞ —Å–ª–æ–≤–∞—Ö —Ç–æ–ª—å–∫–æ
// –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–ª –ø—Ä–æ–ø—ã –≤ fetchFunc —Ç—É–¥–∞ —Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤