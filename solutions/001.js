// –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:

//     –°–æ–∑–¥–∞–π —Ç—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∫ —Å–µ—Ä–≤–µ—Ä—É —Å –ø–æ–º–æ—â—å—é setTimeout –∏ Promise:
//         fetchUserInfo(): –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è (resolve) –æ–±—ä–µ–∫—Ç–æ–º { name: '–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤', bio: '–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.' }.
//         fetchUserTweets(): –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è (resolve) –º–∞—Å—Å–∏–≤–æ–º —Å—Ç—Ä–æ–∫ (—Ç–≤–∏—Ç–æ–≤), –Ω–∞–ø—Ä–∏–º–µ—Ä ['–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?', '–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.'].
//         fetchUserFollowers(): –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise, –∫–æ—Ç–æ—Ä—ã–π —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫—É–Ω–¥—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è (resolve) —á–∏—Å–ª–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä 15000.
//     –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é loadUserProfile(), –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç–∏ —Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
//     –ò—Å–ø–æ–ª—å–∑—É—è async/await, –¥–æ–∂–¥–∏—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
//     –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:

// –ò–º—è: –ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤
// –ë–∏–æ: –°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.
// –¢–≤–∏—Ç—ã: –ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?,–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ,–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.
// –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: 15000

function fetchUserInfo() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      resolve({ name: '–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤', bio: '–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.' });
    }, 1000);
  }
}

function fetchUserTweets() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      resolve(['–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?', '–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.']);
    }, 1500);
  }
}

function fetchUserFollowers() {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      resolve(1500);
    }, 500);
  }
}

async function loadUserProfile() {
  const userData = await fetchUserInfo();
  const userTweets = await fetchUserTweets();
  const followersNumber = await fetchUserFollowers();
  console.log(`–ò–º—è: ${userData.name}`);
  console.log(`–ë–∏–æ: ${userData.bio}`);
  console.log(`–¢–≤–∏—Ç—ã: ${userTweets.join(" ,")}`);
  console.log(`–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${followersNumber}`);
}
