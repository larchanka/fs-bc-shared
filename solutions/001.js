function fetchUserInfo() {
  return new Promise((resolve, reject) =>
    setTimeout(
      resolve({
        name: "–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤",
        bio: "–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.",
      }),
      1 * 1000
    )
  );
}

function fetchUserTweets() {
  return new Promise((resolve, reject) =>
    setTimeout(
      resolve([
        "–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?",
        "–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.",
      ]),
      1.5 * 1000
    )
  );
}

function fetchUserFollowers() {
  return new Promise((resolve, reject) =>
    setTimeout(resolve(15000), 0.5 * 1000)
  );
}

async function loadUserProfile() {
  const userInfo = await fetchUserInfo();
  const userTweets = await fetchUserTweets();
  const userFollowers = await fetchUserFollowers();
  console.log(`–ò–º—è: ${userInfo.name}
–ë–∏–æ: ${userInfo.bio}
–¢–≤–∏—Ç—ã: ${userTweets.join(" ")}
–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${userFollowers}`);
}

loadUserProfile();
