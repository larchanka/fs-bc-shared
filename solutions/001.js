const fetchUserInfo = () => new Promise((resolve) => {
    setTimeout(() => {
        resolve({ 
            name: '–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤',  
            bio: '–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.'  
        });
    }, 1000);
});

const fetchUserTweets = () => new Promise((resolve) => {
    setTimeout(() => {
        resolve([
            '–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?', 
            '–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 
            '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.'
        ]);
    }, 1500);
});

const fetchUserFollowers = () => new Promise((resolve) => {
    setTimeout(() => {
        resolve(15000);
    }, 500);
});

async function loadUserProfile() {
    try {
       const userInfo =  await fetchUserInfo()
       const tweets =  await fetchUserTweets()
       const followers =  await fetchUserFollowers()

       console.log('–ò–º—è:', userInfo.name)
       console.log('–ë–∏–æ:', userInfo.bio)
       console.log('–¢–≤–∏—Ç—ã:', tweets.join(','))
       console.log('–ü–æ–¥–ø–∏—Å—á–∏–∫–∏:', followers)
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
    }
}

loadUserProfile()
