const userInfo = { name: '–ê–ª–µ–∫—Å –ê–ª–≥–æ—Ä–∏—Ç–º–æ–≤', bio: '–°—Ç—Ä–æ—é –±—É–¥—É—â–µ–µ, –ø–æ –æ–¥–Ω–æ–º—É —Ü–∏–∫–ª—É –∑–∞ —Ä–∞–∑.' }
const userTweets = ['–ö–æ–º–º–∏—á—É –≤ –ø—è—Ç–Ω–∏—Ü—É –≤–µ—á–µ—Ä–æ–º. –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫?', '–ë–∞–≥ –∏–ª–∏ —Ñ–∏—á–∞? ü§î #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ - —ç—Ç–æ –∫–∞–∫ –∞—Ä—Ö–µ–æ–ª–æ–≥–∏—è.']
const userFollowers = 15000

const resolvedPromise = (data: unknown, delay: number) => new Promise((rs, rj) => setTimeout(() => rs(data), delay))

const fetchUserInfo = resolvedPromise.bind(null, userInfo, 1000)
const fetchUserTweets = resolvedPromise.bind(null, userTweets, 1500)
const fetchUserFollowers = resolvedPromise.bind(null, userFollowers, 500)

const loadUserProfile = async () => {
  try {
    const userInfoPromise = fetchUserInfo()
    const userTweetsPromise = fetchUserTweets()
    const userFollowersPromise = fetchUserFollowers()

    const userInfo = await userInfoPromise
    const userTweets = await userTweetsPromise
    const userFollowers = await userFollowersPromise

    console.log(`–ò–º—è: ${userInfo.name}`)
    console.log(`–ë–∏–æ: ${userInfo.bio}`)
    console.log(`–¢–≤–∏—Ç—ã: ${userTweets.join(',')}`)
    console.log(`–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${userFollowers}`)

    // return { userInfo, userTweets, userFollowers }
  }
  catch (error) {
    console.error(error)
  }
}
